#BlueJ class context
comment0.params=rows\ cols
comment0.target=Minefield(int,\ int)
comment0.text=\n\ creates\ a\ mine\ field\ with\ the\ specified\ number\ of\ rows\ and\ columns\n
comment1.params=
comment1.target=Minefield()
comment1.text=\n\ creates\ a\ 9\ by\ 9\ mine\ field\n
comment2.params=
comment2.target=int\ numRows()
comment2.text=\n\ numRows\ returns\ the\ number\ of\ rows\ in\ this\ field\n\ \n
comment3.params=
comment3.target=int\ numCols()
comment3.text=\n\ numCols\ returns\ the\ number\ of\ columns\ in\ this\ field\n
comment4.params=row\ col
comment4.target=boolean\ isValid(int,\ int)
comment4.text=\n\ returns\ true\ if\ the\ row\ and\ col\ given\ are\ within\ the\ grid\n\ \n\ Write\ this\ method\!\n
comment5.params=row\ col
comment5.target=boolean\ isMine(int,\ int)
comment5.text=\n\ returns\ true\ if\ the\ row\ and\ col\ given\ correspond\ to\ a\ valid\ location\ \n\ within\ the\ grid\ and\ the\ location\ does\ contain\ a\ mine\n
comment6.params=row\ col
comment6.target=void\ add(int,\ int)
comment6.text=\n\ adds\ a\ mine\ to\ the\ grid\n
comment7.params=row\ col
comment7.target=void\ markVisited(int,\ int)
comment7.text=\n\ marks\ an\ empty\ location\ as\ visited\n\ locations\ containing\ mines\ cannot\ be\ marked\ as\ visited,\ otherwise\ the\ recursive\ scan\n\ will\ show\ the\ mine\ locations\!\ \ Use\ the\ display\ disable\ method\ to\ display\ the\ mine\ locations\ \ \ \ \ *\ \n
comment8.params=row\ col
comment8.target=boolean\ isVisited(int,\ int)
comment8.text=\n\ returns\ true\ if\ the\ location\ specified\ has\ been\ visited\n
comment9.params=
comment9.target=int\ numMines()
comment9.text=\n\ return\ the\ number\ of\ mines\ in\ this\ mine\ filed\n\ \n
numComments=10
